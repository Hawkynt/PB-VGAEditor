' TIF File Format Module
' Common Interface: FileTIF_Read, FileTIF_Write

' TIFF Constants
%TIFF_LITTLEENDIAN = &H4949      ' "II"
%TIFF_BIGENDIAN    = &H4D4D      ' "MM"
%TIFF_MAGIC        = 42

' TIFF Tags
%TAG_IMAGEWIDTH    = 256
%TAG_IMAGELENGTH   = 257
%TAG_BITSPERSAMPLE = 258
%TAG_COMPRESSION   = 259
%TAG_PHOTOMETRIC   = 262
%TAG_STRIPOFFSETS  = 273
%TAG_SAMPLESPERPIXEL = 277
%TAG_ROWSPERSTRIP  = 278
%TAG_STRIPBYTECOUNTS = 279
%TAG_COLORMAP      = 320

' Field Types
%FIELD_BYTE   = 1
%FIELD_ASCII  = 2
%FIELD_SHORT  = 3
%FIELD_LONG   = 4
%FIELD_RATIONAL = 5

' Compression Types
%COMPRESSION_NONE = 1

' Photometric Interpretations
%PHOTOMETRIC_PALETTE = 3

TYPE TIFFHeader
    ByteOrder   AS WORD     ' "II" (4949h) or "MM" (4D4Dh)
    Magic       AS WORD     ' 42
    IFDOffset   AS DWORD    ' Offset to first IFD
END TYPE

TYPE TIFFDirectoryEntry
    Tag         AS WORD     ' TIFF tag
    FieldType   AS WORD     ' Data type
    Count       AS DWORD    ' Number of values
    ValueOffset AS DWORD    ' Value or offset to value
END TYPE

FUNCTION FileTIF_SwapWord(BYVAL value AS WORD) AS WORD
  !MOV AX, value
  !XCHG Al, AH
  !MOV FileTIF_SwapWord,AX
END FUNCTION

FUNCTION FileTIF_SwapDWord(BYVAL value AS DWORD) AS DWORD
  DIM E0 AS WORD, E1 AS WORD
  E0 = value \ &H10000
  E1 = value AND &HFFFF
  E0 = FileTIF_SwapWord(E0)
  E1 = FileTIF_SwapWord(E1)
  FileTIF_SwapDWord = E1 * &H10000 + E0
END FUNCTION

SUB FileTIF_Write (fullPath AS STRING, errorMessage AS STRING)
   errorMessage = ""

    IF currentSprite.boundingBoxX2 = -1 THEN EXIT SUB

    DIM spriteWidth  AS DWORD : spriteWidth  = currentSprite.boundingBoxX2 - currentSprite.boundingBoxX1 + 1
    DIM spriteHeight AS DWORD : spriteHeight = currentSprite.boundingBoxY2 - currentSprite.boundingBoxY1 + 1

    DIM fileNum AS INTEGER : fileNum = FREEFILE
    ON ERROR RESUME NEXT
        OPEN fullPath FOR BINARY AS #fileNum
        IF ERR <> 0 THEN
            errorMessage = "Cannot create file: " & fullPath
            ERRCLEAR : ON ERROR GOTO 0
            EXIT SUB
        END IF
    ON ERROR GOTO 0

    ' --- Layout ---
    ' [Header(8)][IFD(2 + 10*12 + 4)][ColorMap(48*2 bytes)][ImageData(ceil(w/2)*h bytes)]
    DIM ifdEntryCount AS WORD : ifdEntryCount = 10
    DIM ifdSize   AS DWORD : ifdSize   = 2 + ifdEntryCount * 12 + 4
    DIM headerSz  AS DWORD : headerSz  = 8
    DIM rowBytes  AS DWORD : rowBytes  = (spriteWidth + 1) \ 2
    DIM imageBytes AS DWORD : imageBytes = rowBytes * spriteHeight
    DIM colorMapShorts AS DWORD : colorMapShorts = 3 * 16     ' 48
    DIM colorMapBytes  AS DWORD : colorMapBytes  = colorMapShorts * 2

    DIM ifdOffset      AS DWORD : ifdOffset      = headerSz
    DIM colorMapOffset AS DWORD : colorMapOffset = ifdOffset + ifdSize
    DIM stripOffset    AS DWORD : stripOffset    = colorMapOffset + colorMapBytes
    DIM stripByteCount AS DWORD : stripByteCount = imageBytes

    ' --- Header ---
    DIM header AS TIFFHeader
    header.ByteOrder = %TIFF_LITTLEENDIAN
    header.Magic     = %TIFF_MAGIC
    header.IFDOffset = ifdOffset
    PUT #fileNum, , header

    ' --- IFD ---
    PUT #fileNum, , ifdEntryCount

    DIM entry AS TIFFDirectoryEntry

    ' ImageWidth (LONG,1)
    entry.Tag        = %TAG_IMAGEWIDTH
    entry.FieldType  = %FIELD_LONG
    entry.Count      = 1
    entry.ValueOffset= spriteWidth
    PUT #fileNum, , entry

    ' ImageLength (LONG,1)
    entry.Tag        = %TAG_IMAGELENGTH
    entry.FieldType  = %FIELD_LONG
    entry.Count      = 1
    entry.ValueOffset= spriteHeight
    PUT #fileNum, , entry

    ' BitsPerSample (SHORT,1) = 4
    entry.Tag        = %TAG_BITSPERSAMPLE
    entry.FieldType  = %FIELD_SHORT
    entry.Count      = 1
    entry.ValueOffset= 4
    PUT #fileNum, , entry

    ' Compression (SHORT,1) = none
    entry.Tag        = %TAG_COMPRESSION
    entry.FieldType  = %FIELD_SHORT
    entry.Count      = 1
    entry.ValueOffset= %COMPRESSION_NONE
    PUT #fileNum, , entry

    ' PhotometricInterpretation (SHORT,1) = palette
    entry.Tag        = %TAG_PHOTOMETRIC
    entry.FieldType  = %FIELD_SHORT
    entry.Count      = 1
    entry.ValueOffset= %PHOTOMETRIC_PALETTE
    PUT #fileNum, , entry

    ' StripOffsets (LONG,1)
    entry.Tag        = %TAG_STRIPOFFSETS
    entry.FieldType  = %FIELD_LONG
    entry.Count      = 1
    entry.ValueOffset= stripOffset
    PUT #fileNum, , entry

    ' SamplesPerPixel (SHORT,1) = 1
    entry.Tag        = %TAG_SAMPLESPERPIXEL
    entry.FieldType  = %FIELD_SHORT
    entry.Count      = 1
    entry.ValueOffset= 1
    PUT #fileNum, , entry

    ' RowsPerStrip (LONG,1) = full image
    entry.Tag        = %TAG_ROWSPERSTRIP
    entry.FieldType  = %FIELD_LONG
    entry.Count      = 1
    entry.ValueOffset= spriteHeight
    PUT #fileNum, , entry

    ' StripByteCounts (LONG,1)
    entry.Tag        = %TAG_STRIPBYTECOUNTS
    entry.FieldType  = %FIELD_LONG
    entry.Count      = 1
    entry.ValueOffset= stripByteCount
    PUT #fileNum, , entry

    ' ColorMap (SHORT,48) -> colorMapOffset
    entry.Tag        = %TAG_COLORMAP
    entry.FieldType  = %FIELD_SHORT
    entry.Count      = colorMapShorts
    entry.ValueOffset= colorMapOffset
    PUT #fileNum, , entry

    ' Next IFD = 0
    DIM nextIFD AS DWORD : nextIFD = 0
    PUT #fileNum, , nextIFD

    ' --- ColorMap BEFORE image data ---
    ' VGA palette (R[16], then G[16], then B[16]), WORD values scaled 8-bit * 257
    DIM vgaPalette(0 TO 15) AS DWORD
    vgaPalette(0) = &H000000
    vgaPalette(1) = &H0000AA
    vgaPalette(2) = &H00AA00
    vgaPalette(3) = &H00AAAA
    vgaPalette(4) = &HAA0000
    vgaPalette(5) = &HAA00AA
    vgaPalette(6) = &HAA5500
    vgaPalette(7) = &HAAAAAA
    vgaPalette(8) = &H555555
    vgaPalette(9) = &H5555FF
    vgaPalette(10)= &H55FF55
    vgaPalette(11)= &H55FFFF
    vgaPalette(12)= &HFF5555
    vgaPalette(13)= &HFF55FF
    vgaPalette(14)= &HFFFF55
    vgaPalette(15)= &HFFFFFF

    DIM i AS LONG
    DIM wordVal AS WORD
    ' Reds
    FOR i = 0 TO 15
        wordVal = ((vgaPalette(i) \ 65536) AND &HFF) * &H0101
        PUT #fileNum, , wordVal
    NEXT
    ' Greens
    FOR i = 0 TO 15
        wordVal = ((vgaPalette(i) \ 256) AND &HFF) * &H0101
        PUT #fileNum, , wordVal
    NEXT
    ' Blues
    FOR i = 0 TO 15
        wordVal = (vgaPalette(i) AND &HFF) * &H0101
        PUT #fileNum, , wordVal
    NEXT

    ' --- Image data (one strip, uncompressed), 2 pixels per byte, high nibble first ---
    DIM x AS DWORD, y AS DWORD
    DIM byteVal AS BYTE
    FOR y = currentSprite.boundingBoxY1 TO currentSprite.boundingBoxY2
        x = currentSprite.boundingBoxX1
        DO WHILE x + 1 <= currentSprite.boundingBoxX2
            DIM p1 AS BYTE : p1 = currentCanvas(x, y)
            DIM p2 AS BYTE : p2 = currentCanvas(x + 1, y)
            IF (p1 > 15) OR (p2 > 15) THEN CLOSE #fileNum : errorMessage = "Palette index out of range (0..15)." : EXIT SUB
            byteVal = (p1 * 16) OR (p2 AND &HF)
            PUT #fileNum, , byteVal
            x = x + 2
        LOOP
        IF x <= currentSprite.boundingBoxX2 THEN
            DIM p AS BYTE : p = currentCanvas(x, y)
            IF p > 15 THEN CLOSE #fileNum : errorMessage = "Palette index out of range (0..15)." : EXIT SUB
            byteVal = (p * 16) ' low nibble padded with 0
            PUT #fileNum, , byteVal
        END IF
    NEXT

    CLOSE #fileNum
END SUB

SUB FileTIF_Read (fullPath AS STRING, errorMessage AS STRING)
    errorMessage = "not yet implemented"
END SUB